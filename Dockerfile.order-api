# Multi-stage build for a small, secure runtime image
# Build stage
FROM golang:1.25 AS builder

WORKDIR /src
# Leverage Go modules cache
COPY go.mod go.sum ./
RUN go mod download

# Copy the whole repo to build with internal libs
COPY . .

# Build statically if possible for scratch/distroless
ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64
RUN --mount=type=cache,target=/root/.cache/go-build \
    go build -ldflags="-s -w" -o /out/order-api ./services/order-api/cmd

# Runtime stage
FROM gcr.io/distroless/base-debian12:nonroot
WORKDIR /app

# Copy binary
COPY --from=builder /out/order-api /app/order-api

# Expose service port (match config default or env)
EXPOSE 8080

# Non-root user provided by distroless:nonroot
USER nonroot:nonroot

ENTRYPOINT ["/app/order-api"]